generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity", "interactiveTransactions"]
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model User {
    id         String   @id @default(cuid())
    username   String?  @unique
    email      String   @unique
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
    ownedTags  Tag[]    @relation(name: "ownedTags")
    ownedTasks Task[]   @relation(name: "ownedTasks")
}

model Tag {
    id            String   @id @default(cuid())
    label         String
    was_last_used Boolean  @default(false)
    ownerId       String
    color         String
    owner         User     @relation(name: "ownedTags", fields: [ownerId], references: [id], onDelete: Cascade)
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    tasks         Task[]
}

model Task {
    id        String    @id @default(cuid())
    tagId     String
    tag       Tag       @relation(fields: [tagId], references: [id])
    ownerId   String
    owner     User      @relation(name: "ownedTasks", fields: [ownerId], references: [id], onDelete: Cascade)
    expiresAt DateTime
    stoppedAt DateTime?
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

enum LogType {
    UpdateUser
    DeleteUser

    CreateTag
    UpdateTag
    DeleteTag

    CreateTask
    StopTask
    UpdateTask
    DeleteTask
}

model Log {
    id        String     @id @default(cuid())
    createdAt DateTime   @default(now())
    logType   LogType
    actors    LogActor[]
}

enum LogActorSequenceType {
    Executor
    Target
    TargetOwner
}

enum LogActorType {
    User
    Tag
    Task
}

model LogActor {
    id           String               @id @default(cuid())
    actorId      String
    actorType    LogActorType
    sequenceType LogActorSequenceType
    log          Log?                 @relation(fields: [logId], references: [id], onDelete: Cascade)
    logId        String?
}
